{"version":3,"sources":["domain/Signin/component/SignInForm.style.tsx","domain/Signin/component/SignInForm.tsx","hooks/auth/action.ts","domain/Signin/container/SignIn.style.tsx","hooks/auth/context.ts","domain/Signin/container/SignIn.tsx","types/index.ts","domain/Home/layouts/Header/Header.style.tsx","domain/Home/layouts/Header/Header.tsx","domain/Home/component/Workflow/Workflow.style.tsx","domain/Home/component/Workflow/Workflow.tsx","domain/Home/layouts/Body/Body.style.tsx","domain/Home/layouts/Body/Body.tsx","hooks/workflow/action.ts","domain/Home/container/Home.style.tsx","hooks/workflow/context.ts","hooks/node/context.ts","domain/Home/container/Home.tsx","domain/Workflow/layouts/Header/Header.style.tsx","domain/Workflow/layouts/Header/Header.tsx","domain/Workflow/component/Nodes/Nodes.style.tsx","domain/Workflow/component/Nodes/Node.tsx","domain/Workflow/layouts/Body/Body.style.tsx","domain/Workflow/layouts/Body/Body.tsx","hooks/node/action.ts","domain/Workflow/container/Workflow.style.tsx","domain/Workflow/hooks/useSingleWorkflow.ts","domain/Workflow/hooks/useFilteredNodes.ts","domain/Workflow/container/Workflow.tsx","AppRoute.tsx","components/Header/Header.style.tsx","components/Header/Header.tsx","App.style.tsx","hooks/auth/reducer.ts","utils/localStorage.ts","hooks/auth/store.ts","provider/AuthContextProvider.tsx","hooks/workflow/reducer.ts","hooks/workflow/store.ts","provider/WorkflowContextProvider.tsx","hooks/node/reducer.ts","hooks/node/store.ts","provider/NodeContextProvider.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","display","title","textAlign","container","minWidth","footer","margin","SignInForm","AUTH_ACTION","signIn","classes","useState","email","setEmail","password","setPassword","checked","setChecked","Card","raised","className","CardHeader","CardContent","TextField","placeholder","value","onChange","target","type","variant","fullWidth","InputProps","startAdornment","InputAdornment","position","Checkbox","inputProps","Typography","CardActions","Button","color","onClick","to","alignItems","justifyContent","marginTop","AuthContext","createContext","SignIn","WORKFLOW_FILTER","WORKFLOW_STATUS","NODE_STATUS","useContext","dispatch","state","useLocation","history","useHistory","rememberMe","LOGIN","payload","dispatchSignIn","push","from","padding","filter","createButton","marginLeft","Header","updateFilter","createNewWorkflow","Paper","elevation","Grid","item","xs","searchString","FormControl","Select","defaultValue","ALL","displayEmpty","MenuItem","COMPLETED","PENDING","delete","right","transform","deleteHide","Workflow","deleteFn","updateState","hover","setHover","classToApply","classNames","statusColor","id","onMouseEnter","onMouseLeave","Fab","style","aria-label","event","preventDefault","name","justify","Body","WORKFLOW_ACTION","workflowStates","deleteWorkflow","updateWorkflowState","map","key","flexDirection","WorkflowContext","updateWorkflow","workflowModel","UPDATE","NodeContext","Home","nodeStates","setFilter","filteredWorkflow","setFilteredWorkflow","useEffect","filterToStatus","stringSearch","includes","uuid","uuidv4","ADD","addWorkflow","DELETE","workflowId","node","reduce","accu","workflow","find","model","newState","useButtonStyle","workflowState","updateWorkFlow","addTask","saveTasks","deleteTask","shuffleTasks","buttonClasses","check","checkHide","Node","update","colorToApply","IN_PROGRESS","toState","direction","task","multiline","rows","description","NODE_ACTION","nodes","setNodes","updateIndividualNode","nodeUpdated","index","findIndex","newNodes","useSingleWorkflow","workFlowDispatch","useFilteredNodes","nodeDispatch","useParams","localNodes","setLocalNodes","localWorkflow","setLocalWorkflow","currentState","SAVE","saveNodes","length","newLocalNodes","pop","shuffle","AppRoute","auth","path","render","pathname","location","flexGrow","link","AppBar","Toolbar","LOGOUT","dispatchLogout","minHeight","main","AuthReducer","action","JSON","stringify","localStorage","setItem","removeItem","clearLocalStorage","initialAuthState","stringData","getItem","parse","getFromLocalStorage","AuthContextProvider","props","useReducer","Provider","children","WorkflowReducer","newWorkflow","rest","newWorkflowState","splice","initialWorkflowState","WorkflowContextProvider","NodeReducer","initialNodeState","NodeContextProvider","App","CssBaseline","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3265377c.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"block\",\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  container: {\n    minWidth: \"500px\",\n  },\n  footer: {\n    textAlign: \"center\",\n    margin: \"30px\",\n  },\n}));\n\nexport default useStyles;\n","import React, { useState } from \"react\";\nimport useStyles from \"./SignInForm.style\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\ntype IProps = {\n  signIn: (email: string, password: string, setChecked: boolean) => void;\n};\n\nfunction SignInForm({ signIn }: IProps) {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n  const handleEmail = ({\n    target: { value },\n  }: {\n    target: { value: string };\n  }) => {\n    setEmail(value);\n  };\n  const handlePassword = ({\n    target: { value },\n  }: {\n    target: { value: string };\n  }) => {\n    setPassword(value);\n  };\n  const handleChecked = () => {\n    setChecked(!checked);\n  };\n  return (\n    <Card raised={true} className={classes.container}>\n      <CardHeader title=\"Login\" className={classes.title}></CardHeader>\n      <CardContent>\n        <TextField\n          className={classes.root}\n          placeholder=\"Email\"\n          value={email}\n          onChange={handleEmail}\n          margin=\"normal\"\n          type=\"email\"\n          variant=\"outlined\"\n          fullWidth={true}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <EmailIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          className={classes.root}\n          placeholder=\"Password\"\n          value={password}\n          onChange={handlePassword}\n          margin=\"normal\"\n          type=\"password\"\n          variant=\"outlined\"\n          fullWidth={true}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <LockIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <Checkbox\n          checked={checked}\n          onChange={handleChecked}\n          inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        />{\" \"}\n        <Typography variant=\"body1\" display=\"inline\">\n          Remember me\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth={true}\n          onClick={() => signIn(email, password, checked)}\n        >\n          Login\n        </Button>\n      </CardActions>\n      <div className={classes.footer}>\n        <Link to=\"#\">\n          <Typography variant=\"subtitle1\" display=\"inline\">\n            Don't have an account? Sign up here\n          </Typography>\n        </Link>\n      </div>\n    </Card>\n  );\n}\n\nexport default SignInForm;\n","import React from \"react\";\n\nexport enum AUTH_ACTION {\n  LOGIN = \"[AUTH] login\",\n  LOGOUT = \"[AUTH] logout\",\n}\n\ninterface SIGN_IN {\n  type: AUTH_ACTION;\n  payload: {\n    email: string;\n    password: string;\n    rememberMe: boolean;\n  };\n}\n\ninterface LOGOUT {\n  type: AUTH_ACTION;\n  payload: null;\n}\n\nexport function dispatchSignIn(\n  dispatch: React.Dispatch<AUTH_ACTIONS>,\n  email: string,\n  password: string,\n  rememberMe: boolean\n) {\n  dispatch({\n    type: AUTH_ACTION.LOGIN,\n    payload: {\n      email,\n      password,\n      rememberMe,\n    },\n  });\n}\n\nexport function dispatchLogout(dispatch: React.Dispatch<AUTH_ACTIONS>) {\n  dispatch({\n    type: AUTH_ACTION.LOGOUT,\n    payload: null,\n  });\n}\n\nexport type AUTH_ACTIONS = SIGN_IN | LOGOUT;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"20vh\",\n  },\n}));\n\nexport default useStyles;\n","import { createContext } from \"react\";\n\nconst initialVal: any[] = [];\nexport const AuthContext = createContext(initialVal);\n","import React, { useContext } from \"react\";\nimport SignInForm from \"../component/SignInForm\";\nimport useStyles from \"./SignIn.style\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../../hooks/auth/context\";\nimport { dispatchSignIn } from \"../../../hooks/auth/action\";\n\nfunction SignIn() {\n  const classes = useStyles();\n  const [, dispatch] = useContext(AuthContext);\n  const { state } = useLocation();\n  const history = useHistory();\n\n  function signInDispatchAction(\n    email: string,\n    password: string,\n    rememberMe: boolean\n  ): void {\n    dispatchSignIn(dispatch, email, password, rememberMe);\n    // redirect to state\n    history.push((state && (state as any).from) || \"/\");\n  }\n\n  return (\n    <div className={classes.root}>\n      <SignInForm signIn={signInDispatchAction} />\n    </div>\n  );\n}\n\nexport default SignIn;\n","// TODO move this into respective folders\n\n// Workflow types\nexport enum WORKFLOW_FILTER {\n  ALL = \"All\",\n  COMPLETED = \"Completed\",\n  PENDING = \"Pending\",\n}\n\nexport enum WORKFLOW_STATUS {\n  COMPLETED = \"Completed\",\n  PENDING = \"Pending\",\n}\n\nexport interface WORKFLOW_MODEL {\n  id: string;\n  name: string;\n  state: WORKFLOW_STATUS;\n}\n\n// Node types\nexport enum NODE_STATUS {\n  COMPLETED = \"Completed\",\n  IN_PROGRESS = \"In Progress\",\n  PENDING = \"Pending\",\n}\n\nexport interface NODE_MODEL {\n  id: string;\n  workflowId: string;\n  task: string;\n  description: string;\n  state: NODE_STATUS;\n}\n\n// Auth Types\nexport interface AUTH_MODEL {\n  email: string;\n  password: string;\n}\n\nexport interface AUTH_STATE {\n  auth: AUTH_MODEL | null;\n}\n\nexport interface WORKFLOW_STATE {\n  workflowStates: WORKFLOW_MODEL[];\n}\n\nexport interface NODE_STATE {\n  nodeStates: NODE_MODEL[];\n}\n\nexport const AUTH_LOCAL_STORAGE = \"app_auth\";\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"10px 20px\",\n    margin: \"0px\",\n  },\n  filter: {\n    minWidth: \"120px\",\n  },\n  createButton: {\n    marginLeft: \"auto\"\n  }\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"./Header.style\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport { WORKFLOW_FILTER } from \"../../../../types/index\";\n\ntype IProps = {\n  filter: { filter: WORKFLOW_FILTER; searchString: string };\n  updateFilter: ({\n    filter,\n    searchString,\n  }: {\n    filter: WORKFLOW_FILTER;\n    searchString: string;\n  }) => void;\n  createNewWorkflow: () => void;\n};\n\nfunction Header({ filter, updateFilter, createNewWorkflow }: IProps) {\n  const classes = useStyles();\n\n  const handleChange = ({ target: { value } }: { target: { value: any } }) => {\n    updateFilter({ filter: value, searchString: filter.searchString });\n  };\n\n  const handleTextChange = ({\n    target: { value },\n  }: {\n    target: { value: any };\n  }) => {\n    updateFilter({ filter: filter.filter, searchString: value });\n  };\n\n  return (\n    <Paper elevation={3} className={classes.root}>\n      <Typography variant=\"body1\">\n        Search workflow based on workflow names\n      </Typography>\n      <Grid container alignItems=\"center\">\n        <Grid item xs={4}>\n          <TextField\n            className={classes.root}\n            placeholder=\"Search\"\n            value={filter.searchString}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth={true}\n            onChange={handleTextChange}\n          />\n        </Grid>\n        <Grid item xs={2}>\n          <FormControl variant=\"outlined\">\n            <Select\n              defaultValue={WORKFLOW_FILTER.ALL}\n              onChange={handleChange}\n              displayEmpty\n              className={classes.filter}\n            >\n              <MenuItem value={WORKFLOW_FILTER.ALL}>\n                {WORKFLOW_FILTER.ALL}\n              </MenuItem>\n              <MenuItem value={WORKFLOW_FILTER.COMPLETED}>\n                {WORKFLOW_FILTER.COMPLETED}\n              </MenuItem>\n              <MenuItem value={WORKFLOW_FILTER.PENDING}>\n                {WORKFLOW_FILTER.PENDING}\n              </MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={2} className={classes.createButton}>\n          <Button\n            onClick={createNewWorkflow}\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth={true}\n          >\n            Create Workflow\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Header;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    margin: \"20px 20px\",\n  },\n  title: {\n    textAlign: \"center\",\n  },\n\n  delete: {\n    position: \"absolute\",\n    right: \"0px\",\n    transform: \"translate(50%,-50%)\",\n  },\n\n  deleteHide: {\n    display: \"none\",\n  },\n}));\n\nexport default useStyles;\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport useStyles from \"./Workflow.style\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { WORKFLOW_MODEL, WORKFLOW_STATUS } from \"../../../../types/index\";\n\ninterface IProps {\n  state: WORKFLOW_MODEL;\n  deleteFn: (id: string) => void;\n  updateState: (id: string) => void;\n}\n\nfunction Workflow({ state, deleteFn, updateState }: IProps) {\n  const classes = useStyles();\n  const [hover, setHover] = useState(false);\n\n  const classToApply = hover\n    ? classNames(classes.delete)\n    : classNames(classes.delete, classes.deleteHide);\n\n  const showDelete = () => {\n    setHover(true);\n  };\n\n  const hideDelete = () => {\n    setHover(false);\n  };\n\n  const statusColor =\n    state.state === WORKFLOW_STATUS.COMPLETED ? \"primary\" : \"default\";\n  return (\n    <Link\n      to={`/workflow/${state.id}`}\n      onMouseEnter={showDelete}\n      onMouseLeave={hideDelete}\n    >\n      <div className={classes.root}>\n        <Fab\n          style={{ color: \"red\" }}\n          aria-label=\"Delete\"\n          className={classToApply}\n          onClick={(event: React.MouseEvent) => {\n            event.preventDefault();\n            deleteFn(state.id);\n          }}\n        >\n          <DeleteIcon />\n        </Fab>\n        <Card raised={true}>\n          <CardHeader title={state.name} className={classes.title}></CardHeader>\n          <CardContent>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <Typography variant=\"body1\" display=\"inline\">\n                  {state.state}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Fab\n                  color={statusColor}\n                  aria-label=\"Check\"\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    updateState(state.id);\n                  }}\n                >\n                  <CheckIcon />\n                </Fab>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </div>\n    </Link>\n  );\n}\n\nexport default Workflow;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: \"0px\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport Workflow from \"../../component/Workflow/Workflow\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useStyles from \"./Body.style\";\nimport { WORKFLOW_MODEL } from \"../../../../types/index\";\n\ninterface IProps {\n  workflowStates: WORKFLOW_MODEL[];\n  deleteWorkflow: (id: string) => void;\n  updateWorkflowState: (id: string) => void;\n}\n\nfunction Body({ workflowStates, deleteWorkflow, updateWorkflowState }: IProps) {\n  const classes = useStyles();\n  return (\n    <Grid container className={classes.container}>\n      {workflowStates.map((state, key) => {\n        return (\n          <Grid item xs={3} key={key}>\n            <Workflow\n              state={state}\n              deleteFn={deleteWorkflow}\n              updateState={updateWorkflowState}\n            />\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n\nexport default Body;\n","import React from \"react\";\nimport { WORKFLOW_MODEL } from \"../../types/index\";\n\nexport enum WORKFLOW_ACTION {\n  ADD = \"[Workflow] add\",\n  UPDATE = \"[Workflow] update\",\n  DELETE = \"[Workflow] delete\",\n}\n\ninterface ADD {\n  type: WORKFLOW_ACTION;\n  payload: string;\n}\n\ninterface UPDATE {\n  type: WORKFLOW_ACTION;\n  payload: Partial<WORKFLOW_MODEL>;\n}\n\ninterface DELETE {\n  type: WORKFLOW_ACTION;\n  payload: string;\n}\n\nexport function addWorkflow(\n  dispatch: React.Dispatch<WORKFLOW_ACTIONS>,\n  id: string\n) {\n  dispatch({\n    type: WORKFLOW_ACTION.ADD,\n    payload: id,\n  });\n}\n\nexport function updateWorkflow(\n  dispatch: React.Dispatch<WORKFLOW_ACTIONS>,\n  workflowModel: Partial<WORKFLOW_MODEL>\n) {\n  dispatch({\n    type: WORKFLOW_ACTION.UPDATE,\n    payload: workflowModel,\n  });\n}\n\nexport function deleteWorkflow(\n  dispatch: React.Dispatch<WORKFLOW_ACTIONS>,\n  id: string\n) {\n  dispatch({\n    type: WORKFLOW_ACTION.DELETE,\n    payload: id,\n  });\n}\n\nexport type WORKFLOW_ACTIONS = ADD | UPDATE | DELETE;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nexport default useStyles;\n","import { createContext } from \"react\";\n\nconst initialVal: any[] = [];\nexport const WorkflowContext = createContext(initialVal);\n","import { createContext } from \"react\";\n\nconst initialVal: any[] = [];\nexport const NodeContext = createContext(initialVal);\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Header from \"../layouts/Header/Header\";\nimport Body from \"../layouts/Body/Body\";\nimport useStyles from \"./Home.style\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  WORKFLOW_FILTER,\n  NODE_MODEL,\n  NODE_STATUS,\n  WORKFLOW_MODEL,\n  WORKFLOW_STATUS,\n} from \"../../../types/index\";\nimport { WorkflowContext } from \"../../../hooks/workflow/context\";\nimport {\n  addWorkflow,\n  deleteWorkflow,\n  updateWorkflow,\n} from \"../../../hooks/workflow/action\";\nimport { NodeContext } from \"../../../hooks/node/context\";\n\nfunction Home() {\n  const classes = useStyles();\n  const [{ workflowStates }, dispatch] = useContext(WorkflowContext);\n\n  // get node States\n  const [{ nodeStates }] = useContext(NodeContext);\n\n  const [filter, setFilter] = useState({\n    filter: WORKFLOW_FILTER.ALL,\n    searchString: \"\",\n  });\n\n  const handleFilter = ({\n    filter,\n    searchString,\n  }: {\n    filter: WORKFLOW_FILTER;\n    searchString: string;\n  }) => {\n    setFilter({\n      filter,\n      searchString,\n    });\n  };\n  const history = useHistory();\n\n  const [filteredWorkflow, setFilteredWorkflow] = useState(workflowStates);\n\n  useEffect(() => {\n    const filterToStatus =\n      filter.filter === WORKFLOW_FILTER.COMPLETED\n        ? WORKFLOW_STATUS.COMPLETED\n        : WORKFLOW_STATUS.PENDING;\n    const filteredWorkflowToServe = workflowStates.filter(\n      (state: WORKFLOW_MODEL) => {\n        return (\n          filter.filter === WORKFLOW_FILTER.ALL ||\n          filterToStatus === state.state\n        );\n      }\n    );\n\n    const stringSearch = filteredWorkflowToServe.filter(\n      (state: WORKFLOW_MODEL) => {\n        return state.name.includes(filter.searchString);\n      }\n    );\n\n    setFilteredWorkflow(stringSearch);\n  }, [filter, workflowStates]);\n\n  const createNewWorkflow = () => {\n    const uuid = uuidv4();\n    addWorkflow(dispatch, uuid);\n\n    // redirect to workflow\n    history.push(`/workflow/${uuid}`);\n  };\n\n  const deleteExistingWorkflow = (id: string) => {\n    deleteWorkflow(dispatch, id);\n  };\n\n  const updateWorkflowState = (workflowId: string) => {\n    // check node states\n    const filteredNode: NODE_MODEL[] = nodeStates.filter(\n      (node: NODE_MODEL) => node.workflowId === workflowId\n    );\n\n    // update state\n    const value = filteredNode.reduce((accu, node) => {\n      return accu && node.state === NODE_STATUS.COMPLETED;\n    }, true);\n\n    if (value) {\n      const workflow = workflowStates.find(\n        (model: WORKFLOW_MODEL) => model.id === workflowId\n      );\n      const newState =\n        workflow.state === WORKFLOW_STATUS.COMPLETED\n          ? WORKFLOW_STATUS.PENDING\n          : WORKFLOW_STATUS.COMPLETED;\n      updateWorkflow(dispatch, { ...workflow, state: newState });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Header\n        filter={filter}\n        updateFilter={handleFilter}\n        createNewWorkflow={createNewWorkflow}\n      />\n      <Body\n        workflowStates={filteredWorkflow}\n        deleteWorkflow={deleteExistingWorkflow}\n        updateWorkflowState={updateWorkflowState}\n      />\n    </div>\n  );\n}\n\nexport default Home;\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"10px 20px\",\n    margin: \"0px\",\n  },\n  filter: {\n    minWidth: \"120px\",\n  },\n  createButton: {\n    marginLeft: \"auto\",\n  },\n}));\n\nexport const useButtonStyle = makeStyles((theme) => ({\n  root: {\n    display: \"inline\",\n    margin: \"0px 10px\",\n  },\n}));\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useStyles, useButtonStyle } from \"./Header.style\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { WORKFLOW_STATUS, WORKFLOW_MODEL } from \"../../../../types/index\";\n\ninterface IProps {\n  workflowState: WORKFLOW_MODEL;\n  updateWorkFlow: (name: WORKFLOW_MODEL) => void;\n  addTask: () => void;\n  saveTasks: () => void;\n  deleteTask: () => void;\n  shuffleTasks: () => void;\n}\n\nfunction Header({\n  workflowState,\n  updateWorkFlow,\n  addTask,\n  saveTasks,\n  deleteTask,\n  shuffleTasks,\n}: IProps) {\n  const classes = useStyles();\n  const buttonClasses = useButtonStyle();\n\n  return (\n    <Paper elevation={3} className={classes.root}>\n      <Grid container alignItems=\"center\" justify=\"space-between\">\n        <Grid item>\n          <TextField\n            className={classes.root}\n            placeholder=\"Workflow Name\"\n            value={workflowState.name}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth={true}\n            onChange={({ target: { value } }: { target: { value: string } }) =>\n              updateWorkFlow({ ...workflowState, name: value })\n            }\n          />\n        </Grid>\n        <Grid item className={classes.createButton}>\n          {workflowState.state === WORKFLOW_STATUS.COMPLETED ? (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={buttonClasses.root}\n              onClick={shuffleTasks}\n            >\n              Shuffle\n            </Button>\n          ) : (\n            <></>\n          )}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={buttonClasses.root}\n            onClick={deleteTask}\n          >\n            Delete\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={buttonClasses.root}\n            onClick={addTask}\n          >\n            Add Node\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={buttonClasses.root}\n            onClick={saveTasks}\n          >\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Header;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    margin: \"20px 20px\",\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  check: {\n    position: \"absolute\",\n    right: \"0px\",\n    transform: \"translate(50%,-50%)\",\n  },\n  checkHide: {\n    display: \"none\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport { Fab, Grid, CardContent, Card, TextField } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport useStyles from \"./Nodes.style\";\nimport { NODE_MODEL, NODE_STATUS } from \"../../../../types/index\";\n\ninterface IProps {\n  node: NODE_MODEL;\n  update: (node: NODE_MODEL) => void;\n}\n\nfunction Node({ node, update }: IProps) {\n  const classes = useStyles();\n  const colorToApply =\n    node.state === NODE_STATUS.COMPLETED\n      ? \"primary\"\n      : node.state === NODE_STATUS.IN_PROGRESS\n      ? \"secondary\"\n      : \"default\";\n\n  return (\n    <div className={classes.root}>\n      <Fab\n        color={colorToApply}\n        aria-label=\"Check\"\n        className={classes.check}\n        onClick={() => {\n          const toState =\n            node.state === NODE_STATUS.PENDING\n              ? NODE_STATUS.IN_PROGRESS\n              : node.state === NODE_STATUS.IN_PROGRESS\n              ? NODE_STATUS.COMPLETED\n              : NODE_STATUS.PENDING;\n          update({ ...node, state: toState });\n        }}\n      >\n        <CheckIcon />\n      </Fab>\n      <Card raised={true}>\n        <CardContent>\n          <Grid container direction=\"column\" alignItems=\"center\">\n            <Grid item>\n              <TextField\n                placeholder=\"Task\"\n                value={node.task}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth={true}\n                onChange={({ target: { value } }) => {\n                  update({ ...node, task: value });\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                aria-label=\"maximum height\"\n                placeholder=\"Description\"\n                multiline\n                rows={8}\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={node.description}\n                fullWidth={true}\n                onChange={({ target: { value } }) => {\n                  update({ ...node, description: value });\n                }}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Node;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {},\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport Node from \"../../component/Nodes/Node\";\nimport Grid from \"@material-ui/core/Grid\";\nimport useStyles from \"./Body.style\";\nimport { NODE_MODEL } from \"../../../../types/index\";\n\ninterface IProps {\n  nodes: NODE_MODEL[];\n  setNodes: (nodes: NODE_MODEL[]) => void;\n}\n\nfunction Body({ nodes, setNodes }: IProps) {\n  const classes = useStyles();\n\n  const updateIndividualNode = (nodeUpdated: NODE_MODEL) => {\n    const index = nodes.findIndex((node) => {\n      return nodeUpdated.id === node.id;\n    });\n    const newNodes = [...nodes];\n    newNodes[index] = { ...nodeUpdated };\n    setNodes(newNodes);\n  };\n\n  return (\n    <Grid container className={classes.container}>\n      {nodes.map((node, key) => {\n        return (\n          <Grid item xs={3} key={key}>\n            <Node node={node} update={updateIndividualNode} />\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n\nexport default Body;\n","import React from \"react\";\nimport { NODE_MODEL } from \"../../types/index\";\n\nexport enum NODE_ACTION {\n  SAVE = \"[Workflow] save\",\n}\n\ninterface SAVE {\n  type: NODE_ACTION;\n  payload: {\n    nodes: NODE_MODEL[];\n    workflowId: string;\n  };\n}\n\nexport function saveNodes(\n  dispatch: React.Dispatch<NODE_ACTIONS>,\n  { nodes, workflowId }: { nodes: NODE_MODEL[]; workflowId: string }\n) {\n  dispatch({\n    type: NODE_ACTION.SAVE,\n    payload: { nodes, workflowId },\n  });\n}\n\nexport type NODE_ACTIONS = SAVE;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nexport default useStyles;\n","import { useContext } from \"react\";\nimport { WorkflowContext } from \"../../../hooks/workflow/context\";\nimport { WORKFLOW_MODEL } from \"../../../types\";\n\nfunction useSingleWorkflow(workflowId: string) {\n  const [{ workflowStates }, dispatch] = useContext(WorkflowContext);\n\n  const workflow = workflowStates.find((state: WORKFLOW_MODEL) => {\n    return state.id === workflowId;\n  });\n\n  return { workflow, workFlowDispatch: dispatch };\n}\n\nexport default useSingleWorkflow;\n","import { useContext } from \"react\";\nimport { NodeContext } from \"../../../hooks/node/context\";\nimport { NODE_MODEL } from \"../../../types/index\";\nimport React from \"react\";\n\ninterface ReturnType {\n  nodes: NODE_MODEL[];\n  nodeDispatch: React.Dispatch<any>;\n}\n\nfunction useFilteredNodes(workflowId: string): ReturnType {\n  const [{ nodeStates }, dispatch] = useContext(NodeContext);\n\n  const nodes = nodeStates.filter((state: NODE_MODEL) => {\n    return state.workflowId === workflowId;\n  });\n\n  return { nodes, nodeDispatch: dispatch };\n}\n\nexport default useFilteredNodes;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../layouts/Header/Header\";\nimport Body from \"../layouts/Body/Body\";\nimport useStyles from \"./Workflow.style\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  WORKFLOW_MODEL,\n  NODE_STATUS,\n  WORKFLOW_STATUS,\n} from \"../../../types/index\";\nimport { saveNodes } from \"../../../hooks/node/action\";\nimport useSingleWorkflow from \"../hooks/useSingleWorkflow\";\nimport useFilteredNodes from \"../hooks/useFilteredNodes\";\nimport { updateWorkflow } from \"../../../hooks/workflow/action\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport shuffle from \"lodash.shuffle\";\n\nfunction Workflow() {\n  const classes = useStyles();\n  const params = useParams();\n  const workflowId = (params as any).id;\n\n  const { workflow, workFlowDispatch } = useSingleWorkflow(workflowId);\n\n  const { nodes, nodeDispatch } = useFilteredNodes(workflowId);\n\n  const [localNodes, setLocalNodes] = useState(nodes);\n  const [localWorkflow, setLocalWorkflow] = useState(workflow);\n\n  useEffect(() => {\n    setLocalWorkflow(workflow);\n  }, [workflow]);\n\n  const updateWorkFlow = (workflow: WORKFLOW_MODEL) => {\n    setLocalWorkflow(workflow);\n  };\n\n  const addTask = () => {\n    setLocalNodes([\n      ...localNodes,\n      {\n        id: uuidv4(),\n        workflowId,\n        task: \"\",\n        description: \"\",\n        state: NODE_STATUS.PENDING,\n      },\n    ]);\n  };\n\n  const saveTasks = () => {\n    const currentState = localNodes.reduce((accu, { state }) => {\n      return accu && state === NODE_STATUS.COMPLETED;\n    }, true);\n\n    const newState =\n      localWorkflow.state === WORKFLOW_STATUS.COMPLETED &&\n      currentState === false\n        ? WORKFLOW_STATUS.PENDING\n        : localWorkflow.state;\n    // update workflow related data\n    updateWorkflow(workFlowDispatch, { ...localWorkflow, state: newState });\n\n    // update node related data\n    saveNodes(nodeDispatch, { nodes: localNodes, workflowId });\n  };\n\n  const deleteTask = () => {\n    if (localNodes.length > 0) {\n      const newLocalNodes = [...localNodes];\n      newLocalNodes.pop();\n      setLocalNodes(newLocalNodes);\n    }\n  };\n\n  const shuffleTasks = () => {\n    const newLocalNodes = shuffle(localNodes);\n    setLocalNodes(newLocalNodes);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Header\n        workflowState={localWorkflow}\n        updateWorkFlow={updateWorkFlow}\n        addTask={addTask}\n        saveTasks={saveTasks}\n        deleteTask={deleteTask}\n        shuffleTasks={shuffleTasks}\n      />\n      <Body nodes={localNodes} setNodes={setLocalNodes} />\n    </div>\n  );\n}\n\nexport default Workflow;\n","import React, { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport SignIn from \"./domain/Signin/container/SignIn\";\nimport Home from \"./domain/Home/container/Home\";\nimport Workflow from \"./domain/Workflow/container/Workflow\";\nimport { AuthContext } from \"./hooks/auth/context\";\n\nfunction AppRoute() {\n  const [{ auth }] = useContext(AuthContext);\n  return (\n    <>\n      {auth ? (\n        <Switch>\n          <Route path=\"/workflow/:id\">\n            <Workflow />\n          </Route>\n          <Route path=\"/workflow\">\n            <Home />\n          </Route>\n          <Route\n            path=\"/\"\n            render={() => {\n              return (\n                <Redirect\n                  to={{\n                    pathname: \"/workflow\",\n                  }}\n                />\n              );\n            }}\n          ></Route>\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path=\"/signIn\">\n            <SignIn />\n          </Route>\n          <Route\n            path=\"/\"\n            render={({ location }) => {\n              return (\n                <Redirect\n                  to={{\n                    pathname: \"/signIn\",\n                    state: { from: location },\n                  }}\n                />\n              );\n            }}\n          ></Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default AppRoute;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  link: {\n    color: \"white\",\n  },\n}));\n\nexport default useStyles;\n","import React, { useContext } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"./Header.style\";\nimport Button from \"@material-ui/core/Button\";\nimport { AuthContext } from \"../../hooks/auth/context\";\nimport { dispatchLogout } from \"../../hooks/auth/action\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  const classes = useStyles();\n  const [{ auth }, dispatch] = useContext(AuthContext);\n\n  const logoutClicked = () => {\n    dispatchLogout(dispatch);\n  };\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          <Link to=\"/\" className={classes.link}>\n            FLOWAPP\n          </Link>\n        </Typography>\n        {auth ? (\n          <Button variant=\"contained\" onClick={logoutClicked}>\n            LOGOUT\n          </Button>\n        ) : (\n          <></>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  main: {\n    flexGrow: 1,\n  },\n}));\n\nexport default useStyles;\n","import { AUTH_STATE, AUTH_LOCAL_STORAGE } from \"../../types/index\";\nimport { AUTH_ACTIONS, AUTH_ACTION } from \"./action\";\nimport { clearLocalStorage, saveLocalStorage } from \"../../utils/localStorage\";\n\nconst AuthReducer = (state: AUTH_STATE, action: AUTH_ACTIONS): AUTH_STATE => {\n  let payload: any;\n  switch (action.type) {\n    case AUTH_ACTION.LOGIN: {\n      payload = action.payload;\n      if (payload!.rememberMe) {\n        saveLocalStorage(\n          AUTH_LOCAL_STORAGE,\n          JSON.stringify({ email: payload!.email, password: payload!.password })\n        );\n      }\n      return {\n        auth: { email: payload!.email, password: payload!.password },\n      };\n    }\n\n    case AUTH_ACTION.LOGOUT: {\n      payload = action.payload;\n      clearLocalStorage(AUTH_LOCAL_STORAGE);\n      return { auth: null };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default AuthReducer;\n","// save in local storage\nexport function saveLocalStorage(key: string, value: any) {\n  return localStorage.setItem(key, JSON.stringify(value));\n}\n\n// clean local storage\nexport function clearLocalStorage(key: string) {\n  return localStorage.removeItem(key);\n}\n\n// get from local storage\nexport function getFromLocalStorage(key: string) {\n  const stringData = localStorage.getItem(key);\n  return stringData && JSON.parse(stringData);\n}\n","import { getFromLocalStorage } from \"../../utils/localStorage\";\nimport { AUTH_LOCAL_STORAGE, AUTH_STATE } from \"../../types/index\";\n\nexport const initialAuthState: AUTH_STATE = {\n  auth: getFromLocalStorage(AUTH_LOCAL_STORAGE) || null,\n};\n","import React, { useReducer } from \"react\";\nimport AuthReducer from \"../hooks/auth/reducer\";\nimport { initialAuthState } from \"../hooks/auth/store\";\nimport { AuthContext } from \"../hooks/auth/context\";\n\nfunction AuthContextProvider(props: any) {\n  const [state, dispatch] = useReducer(AuthReducer, initialAuthState);\n\n  return (\n    <AuthContext.Provider value={[state, dispatch]}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthContextProvider;\n","import { WORKFLOW_STATE, WORKFLOW_STATUS } from \"../../types/index\";\nimport { WORKFLOW_ACTIONS, WORKFLOW_ACTION } from \"./action\";\nimport { WORKFLOW_MODEL } from \"../../types/index\";\n\nconst WorkflowReducer = (\n  state: WORKFLOW_STATE,\n  action: WORKFLOW_ACTIONS\n): WORKFLOW_STATE => {\n  switch (action.type) {\n    case WORKFLOW_ACTION.ADD: {\n      const id = action.payload as string;\n      const newWorkflow: WORKFLOW_MODEL = {\n        id,\n        name: \"\",\n        state: WORKFLOW_STATUS.PENDING,\n      };\n      return {\n        workflowStates: [...state.workflowStates, newWorkflow],\n      };\n    }\n\n    case WORKFLOW_ACTION.UPDATE: {\n      const { id, ...rest } = action.payload as WORKFLOW_MODEL;\n      const newWorkflowState = [...state.workflowStates];\n      let index = newWorkflowState.findIndex((state) => state.id === id)!;\n      newWorkflowState[index] = { ...newWorkflowState[index], ...rest };\n      return {\n        workflowStates: newWorkflowState,\n      };\n    }\n\n    case WORKFLOW_ACTION.DELETE: {\n      const id = action.payload as string;\n      const index = state.workflowStates.findIndex((state) => state.id === id);\n      const newWorkflow = [...state.workflowStates];\n      newWorkflow.splice(index, 1);\n      return {\n        workflowStates: [...newWorkflow],\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default WorkflowReducer;\n","import { WORKFLOW_STATE } from \"../../types/index\";\n\nexport const initialWorkflowState: WORKFLOW_STATE = {\n  workflowStates: [],\n};\n","import React, { useReducer } from \"react\";\nimport { WorkflowContext } from \"../hooks/workflow/context\";\nimport WorkflowReducer from \"../hooks/workflow/reducer\";\nimport { initialWorkflowState } from \"../hooks/workflow/store\";\n\nfunction WorkflowContextProvider(props: any) {\n  const [state, dispatch] = useReducer(WorkflowReducer, initialWorkflowState);\n\n  return (\n    <WorkflowContext.Provider value={[state, dispatch]}>\n      {props.children}\n    </WorkflowContext.Provider>\n  );\n}\n\nexport default WorkflowContextProvider;\n","import { NODE_STATE, NODE_MODEL } from \"../../types/index\";\nimport { NODE_ACTION, NODE_ACTIONS } from \"./action\";\n\nconst NodeReducer = (state: NODE_STATE, action: NODE_ACTIONS): NODE_STATE => {\n  switch (action.type) {\n    case NODE_ACTION.SAVE: {\n      const { nodes, workflowId } = action.payload as {\n        nodes: NODE_MODEL[];\n        workflowId: string;\n      };\n      const newNodes = [\n        ...state.nodeStates.filter((node) => node.workflowId !== workflowId),\n        ...nodes,\n      ];\n      return {\n        nodeStates: newNodes,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default NodeReducer;\n","import { NODE_STATE } from \"../../types/index\";\n\nexport const initialNodeState: NODE_STATE = {\n  nodeStates: [],\n};\n","import React, { useReducer } from \"react\";\nimport NodeReducer from \"../hooks/node/reducer\";\nimport { initialNodeState } from \"../hooks/node/store\";\nimport { NodeContext } from \"../hooks/node/context\";\n\nfunction NodeContextProvider(props: any) {\n  const [state, dispatch] = useReducer(NodeReducer, initialNodeState);\n\n  return (\n    <NodeContext.Provider value={[state, dispatch]}>\n      {props.children}\n    </NodeContext.Provider>\n  );\n}\n\nexport default NodeContextProvider;\n","import React from \"react\";\nimport AppRoute from \"./AppRoute\";\nimport Header from \"./components/Header/Header\";\nimport useStyles from \"./App.style\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AuthContextProvider from \"./provider/AuthContextProvider\";\nimport WorkflowContextProvider from \"./provider/WorkflowContextProvider\";\nimport NodeContextProvider from \"./provider/NodeContextProvider\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <AuthContextProvider>\n        <WorkflowContextProvider>\n          <NodeContextProvider>\n            <div className={classes.root}>\n              <Router>\n                <Header />\n                <div className={classes.main}>\n                  <AppRoute />\n                </div>\n              </Router>\n            </div>\n          </NodeContextProvider>\n        </WorkflowContextProvider>\n      </AuthContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}